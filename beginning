#include <iostream>
using namespace std;

const int n = 8;
const int m = 9;

class Cars {
    public:
        int x_n;
        int y_n;
        int x_f;
        int y_f;

        void Car_Direction_Right(int x_n, int y_n){
            x_f = x_n;
            y_f = y_n+1;
        }
        void Car_Direction_Left(int x_n, int y_n){
            x_f = x_n;
            y_f = y_n-1;
        }
        void Car_Direction_Up(int x_n, int y_n){
            x_f = x_n-1;
            y_f = y_n;
        }
        void Car_Direction_Down(int x_n, int y_n){
            x_f = x_n+1;
            y_f = y_n;
        }
};

int Change_Map(int map[n][m], int x, int y, int x_f, int y_f){
    map[x][y]=1;
    map[x_f][y_f]=2;
};

string Look_Map(int map[n][m], string car_direction, int x, int y) {
    string direction;
    if (car_direction == "right") {
        if ((map[x][y + 2] == 0) && (map[x-1][y+1] == 1) && (map[x+1][y+1] == 1)) { //условие, что дальше другая полоса
            if (map[x + 1][y] == 1) {
                direction = "down";
            } else {
                direction = "up";
            }
        } else {
            if (map[x][y + 1] == 1) {
                direction = "right";
            } else {
                if (map[x + 1][y] == 1) {
                    direction = "down";
                } else {
                    direction = "up";
                }
            }
        }
    }
    else if (car_direction == "left") {
        if ((map[x][y-2] == 0) && (map[x+1][y-1] == 1) && (map[x-1][y-1] == 1)) {
            if (map[x - 1][y] == 1) {
                direction = "up";
            } else {
                direction = "down";
            }
        } else {
            if (map[x][y - 1] == 1) {
                direction = "left";
            } else {
                if (map[x - 1][y] == 1) {
                    direction = "up";
                } else {
                    direction = "down";
                }
            }
        }
    }
    else if (car_direction == "up"){
        if ((map[x-2][y] == 0) && (map[x-1][y-1] == 1) && (map[x-1][y+1] == 1)) {
            if (map[x][y + 1] == 1) {
                direction = "right";
            } else {
                direction = "left";
            }
        }
        else {
            if (map[x - 1][y] == 1) {
                direction = "up";
            } else {
                if (map[x][y + 1] == 1) {
                    direction = "right";
                } else {
                    direction = "left";
                }
            }
        }
    }
    else if (car_direction == "down"){
        if ((map[x+2][y] == 0) && (map[x+1][y-1] == 1) && (map[x+1][y+1] == 1)){
            if (map[x][y - 1] == 1) {
                direction = "left";
            } else {
                direction = "right";
            }
        }
        else {
            if (map[x + 1][y] == 1) {
                direction = "down";
            } else {
                if (map[x][y - 1] == 1) {
                    direction = "left";
                } else {
                    direction = "right";
                }
            }
        }
    }
    return direction;
};


void print(int map[n][m]){
    for (int i = 0; i < n; i++) //переключение по строкам
    {
        for (int j = 0; j < m; j++){// переключение по столбцам
            cout << map[i][j] << " ";
        }
        cout << endl;
    }
    cout << " " <<endl;
};

int main() {

//    int map[5][5] = {{0,0,1,0,0},
//                     {0,0,1,0,0},
//                     {1,1,1,0,0},
//                     {0,0,1,1,0},
//                     {0,0,0,1,0}};


    int map[n][m] = {{0, 0, 1, 1, 0, 0, 0, 0, 0},
                     {0, 0, 1, 1, 0, 0, 0, 0, 0},
                     {1, 1, 1, 1, 1, 1, 0, 0, 0},
                     {1, 1, 1, 1, 1, 1, 0, 0, 0},
                     {0, 0, 0, 0, 1, 1, 0, 0, 0},
                     {0, 0, 0, 0, 1, 1, 1, 1, 1},
                     {0, 0, 0, 0, 1, 1, 1, 1, 1},
                     {0, 0, 0, 0, 0, 0, 0, 0, 0}};


    print(map);

    Cars car;
    int x = car.x_n = 3;
    int y = car.y_n = 0;
    map[x][y] = 2;
    string  car_direction = "right";

    print(map);


    while ((y < m-1) && (x < n-1)) {

        string car_direction_next = Look_Map(map, car_direction, x, y);
        if (car_direction_next == "right") {
            car.Car_Direction_Right(x, y);
        } else if (car_direction_next == "left") {
            car.Car_Direction_Left(x, y);
        } else if (car_direction_next == "up") {
            car.Car_Direction_Up(x, y);
        } else if (car_direction_next == "down") {
            car.Car_Direction_Down(x, y);
        }
        int x_f = car.x_f;
        int y_f = car.y_f;
        Change_Map(map, x, y, x_f, y_f);
        x = x_f;
        y = y_f;
        car_direction = car_direction_next;
        print(map);
    }



    return 0;
    }

